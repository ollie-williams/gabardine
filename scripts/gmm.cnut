/*
Gabardine
Copyright (c) Microsoft Corporation
All rights reserved.
Licensed under the Apache License, Version 2.0 (the License); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
See the Apache Version 2.0 License for specific language governing permissions and limitations under the License.
*/
require matrix.cnut

//require array.cnut
operator array.sum 1
operator array.map 2


//require iterate.cnut
//require diff.cnut
//require mkl.cnut

def gauss(x, y, L) ->
  let d = mmul(L, msub(x,y))
  let mahal = dot(d, d)
  det(L) * exp(-0.5 * mahal)


def softmax(ws) ->
  let denom = array.sum(array.map(ws, λw -> exp(w)))
  array.map(ws, λw -> exp(w) / denom)
