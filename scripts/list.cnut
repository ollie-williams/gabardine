/*
Gabardine
Copyright (c) Microsoft Corporation
All rights reserved.
Licensed under the Apache License, Version 2.0 (the License); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
See the Apache Version 2.0 License for specific language governing permissions and limitations under the License.
*/
require nat.cnut
require real.cnut

operator List 0
typeof(cons(h,t)) -> List
typeof(nil) -> List

size(cons(h,t)) -> size(h) + size(t)
size(nil) -> 0

operator list_length 1
list_length(cons(h,t)) -> 1 + list_length(t)
list_length(nil) -> 0
//list_length(let(x,y,lst)) -> list_length(lst)

operator nth 2
  nth(succ(n), cons(h, t)) -> nth(n, t)
  nth(0, cons(h, t)) -> h
  nth(_, nil) -> failwith("Index out of range.")

operator head 1
 head(cons(h,_)) -> h
 head(nil) -> failwith("Empty list.")


